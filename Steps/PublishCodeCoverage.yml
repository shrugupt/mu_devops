## @file
# Azure Pipelines step template to merge and publish all code coverage results.
#
# Copyright (c) Microsoft Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

parameters:
- name: checkout_self
  displayName: Perform self checkout step
  type: boolean
  default: true
- name: setup_python
  displayName: Setup Python
  type: boolean
  default: true

steps:
- ${{ if eq(parameters.checkout_self, true) }}:
  - checkout: self
    clean: true
    fetchDepth: 1

- ${{ if eq(parameters.setup_python, true ) }}:
  - template: SetupPythonPreReqs.yml
    parameters:
      install_python: true
#
# Download the build
#
- task: DownloadPipelineArtifact@2
  name: DownloadBuildLogArtifacts
  displayName: Download Log Artifacts
  inputs:
    buildType: 'current'
    targetPath: '$(Build.ArtifactStagingDirectory)/coverage/'
    itemPattern: "**/*_coverage.xml"

- powershell: |
    $coverage_file_count=(Get-ChildItem $(Build.ArtifactStagingDirectory)/coverage/ -Recurse -Include *_coverage.xml).count
    Write-Host echo "##vso[task.setvariable variable=coverage_file_count]$coverage_file_count"
  displayName: Check For Coverage Files

- task: CmdLine@2
  displayName: Merge Coverage Reports
  inputs:
    script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.ArtifactStagingDirectory)/coverage/**/*_coverage.xml -filefilters:-CloudTurinSiliconPkg/Override/* -targetdir:$(Build.ArtifactStagingDirectory)/Coverage -reporttypes:Cobertura
  condition: gt(variables.coverage_file_count, 0)

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.ArtifactStagingDirectory)/Coverage/Cobertura.xml'
  condition: gt(variables.coverage_file_count, 0)
